version: '3'
services:
  influxdb:
    container_name: influxdb
    # Full tag list: https://hub.docker.com/r/library/influxdb/tags/
    build:
      context: ./images/influxdb/
      dockerfile: ./${TYPE}/Dockerfile
      args:
        INFLUXDB_TAG: ${INFLUXDB_TAG}
    image: "influxdb"
    volumes:
      # Mount for influxdb data directory
      - ./influxdb/data:/var/lib/influxdb
      # Mount for influxdb configuration
      - ./influxdb/config/:/etc/influxdb/
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
      - "8082:8082"
      # UDP Port
      - "8089:8089/udp"
    networks:
      - infra-network

  telegraf:
    container_name: telegraf
    # Full tag list: https://hub.docker.com/r/library/telegraf/tags/
    build:
      context: ./images/telegraf/
      dockerfile: ./${TYPE}/Dockerfile
      args:
        TELEGRAF_TAG: ${TELEGRAF_TAG}
    image: "telegraf"
    environment:
      HOSTNAME: "telegraf-getting-started"
    # Telegraf requires network access to InfluxDB
    # links:
    #   - influxdb
    networks:
      - infra-network
    volumes:
      # Mount for telegraf configuration
      - ./telegraf/:/etc/telegraf/
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb

  kapacitor:
    container_name: kapacitor
  # Full tag list: https://hub.docker.com/r/library/kapacitor/tags/
    build:
      context: ./images/kapacitor/
      dockerfile: ./${TYPE}/Dockerfile
      args:
        KAPACITOR_TAG: ${KAPACITOR_TAG}
    image: "kapacitor"
    volumes:
      # Mount for kapacitor data directory
      - ./kapacitor/data/:/var/lib/kapacitor
      # Mount for kapacitor configuration
      - ./kapacitor/config/:/etc/kapacitor/
    # Kapacitor requires network access to Influxdb
    # links:
    #   - influxdb
    networks:
      - infra-network
    ports:
      # The API for Kapacitor is served on port 9092
      - "9092:9092"

  chronograf:
    container_name: chronograf
    # # Full tag list: https://hub.docker.com/r/library/chronograf/tags/
    # build:
    #   context: ./images/chronograf
    #   dockerfile: ./${TYPE}/Dockerfile
    #   args:
    #     CHRONOGRAF_TAG: ${CHRONOGRAF_TAG}
    # image: "chrono_config"
    image: loudml/chronograf
    environment:
      # RESOURCES_PATH: "/usr/share/chronograf/resources"

      PUBLIC_URL : "http://localhost:8088"
      TOKEN_SECRET : "Super5uperUdn3verGu355!"

      # GOOGLE_CLIENT_ID : "831405758394-hd2ji8h8a196tf0fi0g1c7urjsbb2sr7.apps.googleusercontent.com"
      # GOOGLE_CLIENT_SECRET : "vWlEzeYpN_3FEe9ChuUCzwhr"

      # AUTH0_DOMAIN  : "https://hls.au.auth0.com"
      # AUTH0_CLIENT_ID : "mJpnXc0dXR9GZhas7QdhOZnLuZJekKoG"
      # AUTH0_CLIENT_SECRET : "OjLOKt3uz61_ekShAXEcwlPti96-a14mS4pYle9Of5YQKDtn--QcWwLjcXs6nd9D"

      # GENERIC_CLIENT_ID: "coursepad.admin"
      # GENERIC_CLIENT_SECRET: "IEvgIBADANLgkqhkiG9w0BAQEFAASCB"
      # GENERIC_AUTH_URL: "https://systemtest-idm-web.csc.cxs.cloud/connect/authorize"
      # GENERIC_TOKEN_URL: "https://systemtest-idm-web.csc.cxs.cloud/connect/token"
      # USE_ID_TOKEN: "true"
      # JWKS_URL: "https://systemtest-idm-web.csc.cxs.cloud/.well-known/openid-configuration"
      # GENERIC_API_URL: "https://systemtest-idm-web.csc.cxs.cloud/connect/userinfo"
      # GENERIC_API_KEY: "upn"
      # GENERIC_SCOPES: "openid"

    # environment:
    #   INFLUXDB_URL: http://influxdb:8086
    #   LOUDML_URL: http://loudml:8077
    #   KAPACITOR_URL: http://kapacitor:9092
    volumes:
      # Mount for chronograf database
      - ./chronograf/data/:/var/lib/chronograf/
    # links:
    #   # Chronograf requires network access to InfluxDB and Kapacitor
    #   - influxdb
    #   - kapacitor
    networks:
      - infra-network
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "8088:8888"
    depends_on:
      - kapacitor
      - influxdb
      - telegraf
      # - loudml

  # documentation:
  #   build:
  #     context: ./documentation
  #   ports:
  #     - "3010:3000"

  # loudml:
  #   container_name: loudml
  #   image: loudml/loudml:1.6.0
  #   volumes:
  #     - ./loudml/var/lib:/var/lib/loudml
  #     - ./loudml/etc/config.yml:/etc/loudml/config.yml:ro
  #     - ./loudml/etc/model.json:/etc/loudml/model.json:ro
  #     - ./loudml/var:/var/loudml
  #   ports:
  #     - "8077:8077"
  #   depends_on:
  #     - influxdb

networks:
  infra-network:
    external: true